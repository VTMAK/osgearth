/******************************************************************************
** Copyright (c) 2017 MAK Technologies, Inc.
** All rights reserved.
******************************************************************************/

//! \file DtAssert.h
//! \brief assert macros
//! \ingroup vrvGraphicsUtils
#pragma once

// If this is is 1, the asserts are enabled. Else they are compiled out
// The developer can turn them on for development (locally)
#define OE_ASSERT_ENABLED 0

#if OE_ASSERT_ENABLED
#ifdef NDEBUG
#undef NDEBUG
#endif
// do the assert 
#include <cassert>
#define Assert assert
#else
#define Assert(exp) static_cast<void>(0)
#endif

#define ASSERT_PREDICATE(p)  Assert(p);

#define ASSERT_RETURN(p)	  Assert(p); \
   if (p==0)\
   return;
#define ASSERT_RETURN_ZERO(p)	  Assert(p); \
   if (p==0)\
   return 0;

#define ASSERT_PREDICATE_RETURN(p)	    Assert((p)); \
   if ((p)==false)\
   return;

#define ASSERT_PREDICATE_RETURN_ZERO(p)	  Assert((p)); \
   if ((p)==false)\
   return 0;

#define ASSERT_PREDICATE_RETURN_DEFAULT_CONSTRUCTOR(V, p)	  Assert((p)); \
   if ((p)==false)\
   return V();

#define ASSERT_PREDICATE_RETURN_FALSE(p)  Assert((p)); \
   if ((p)==false)\
   return false;

#define ASSERT_PREDICATE_RETURN_TRUE(p)	  Assert((p)); \
   if ((p)==false)\
   return true;

#define ASSERT_RETURN_EMPTY_STRING(p)	  Assert(p); \
   if (p==0)\
   return "";

#define ASSERT_RETURN_FALSE(p)	  Assert(p); \
   if (p==0)\
   return false;
#define ASSERT_RETURN_TRUE(p)	  Assert(p); \
   if (p==0)\
   return true;

#define ASSERT_EQUAL_RETURN_ZERO(x,y)   Assert(x==y);\
   if (x!=y)   \
   return 0;


