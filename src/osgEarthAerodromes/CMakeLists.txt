
IF(OSGEARTH_BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DOSGEARTHAERODROME_LIBRARY)
ELSE (OSGEARTH_BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DOSGEARTHAERODROME_LIBRARY_STATIC)
ENDIF(OSGEARTH_BUILD_SHARED_LIBS)

set(LIB_NAME osgEarthAerodromes)

set(HEADER_PATH ${OSGEARTH_SOURCE_DIR}/include/${LIB_NAME})

set(LIB_PUBLIC_HEADERS
    AerodromeCatalog
    AerodromeFactory
    AerodromeFeatureNode
    AerodromeFeatureOptions
    AerodromeLayer
    AerodromeNode
    AerodromeRenderer
    BoundaryNode
    Common
    Export
    LightBeaconNode
    LightIndicatorNode
    LinearFeatureNode
    PavementNode
    RunwayNode
    RunwayThresholdNode
    StartupLocationNode
    StopwayNode
    TaxiwayNode
    TaxiwaySignNode
    TerminalNode
    WindsockNode
)

set(LIB_COMMON_FILES
    AerodromeCatalog.cpp
    AerodromeFactory.cpp
    AerodromeLayer.cpp
    AerodromeNode.cpp
    AerodromeRenderer.cpp
)


ADD_LIBRARY( ${LIB_NAME} SHARED
    ${LIB_PUBLIC_HEADERS}  
    ${LIB_COMMON_FILES}
)

# Add this project to the NodeKits solution folder
set_property( TARGET ${LIB_NAME} PROPERTY FOLDER "NodeKits" )


INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR} ${OSGEARTH_SOURCE_DIR} ${GDAL_INCLUDE_DIR})

IF (TRACY_FOUND)
    INCLUDE_DIRECTORIES(${TRACY_INCLUDE_DIR})
    LINK_WITH_VARIABLES(${LIB_NAME} TRACY_LIBRARY)
ENDIF(TRACY_FOUND)

IF (WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})
ELSE(WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})
ENDIF(WIN32)

LINK_INTERNAL(${LIB_NAME}
    osgEarth
)

LINK_WITH_VARIABLES(${LIB_NAME} OSG_LIBRARY OSGUTIL_LIBRARY OSGSIM_LIBRARY OSGTERRAIN_LIBRARY OSGDB_LIBRARY OSGFX_LIBRARY OSGMANIPULATOR_LIBRARY OSGTEXT_LIBRARY OSGGA_LIBRARY OPENTHREADS_LIBRARY GDAL_LIBRARY)
LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})

INCLUDE(ModuleInstall OPTIONAL)
